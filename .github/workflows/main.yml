name: Actions ðŸ˜Ž

on:
  push:
    branches:
      - master
      - develop

jobs:
  buildWebGL:
    name: WebGl Builder âœ¨
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.3.13f1
        targetPlatform:
          - WebGL # WebGL.
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2


      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-

      # Test
      # - name: Run tests
      #   uses: game-ci/unity-test-runner@v2
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #   with:
      #     githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build-WebGL
          path: build


  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages ðŸš€
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: Build-WebGL
          path: build

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/

  deployToStaging:
    needs: buildWebGL
    name: Deploy to staging ðŸš€
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: Build-WebGL
          path: build

      - name: Deploy ðŸš€
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: public_html/build/